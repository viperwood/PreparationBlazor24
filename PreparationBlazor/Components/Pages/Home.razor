@page "/Registration"
@using System.Text.Json.Serialization
@using Newtonsoft.Json
@rendermode InteractiveServer

<PageTitle>Registration</PageTitle>

@if (_genders == null)
{
    <p>...Loading</p>
}
else
{
    
    <div style="display: grid; grid-template-rows: 20vh 1fr 20vh; grid-template-columns: 1fr 1fr 1fr; background: linear-gradient(to top, blue, rebeccapurple)">
        <div style="grid-row: 1; grid-column: 2; display: flex; text-align: center; vertical-align: center">
            <h3 style="color: white; margin: auto">Регистрация</h3>
        </div>
        <div style="grid-column: 2; grid-row: 2; display: block; background: white; border-radius: 100px;">
            <b style="display: block;  margin: 40px">ФИО:</b>

            <input placeholder="ФИО:" @bind="_registrationModel.Fio" style="display: block;  margin: 40px; border-radius: 30px">
            <b style="display: block;  margin: 40px">Серия паспорта:</b>
            <input placeholder="Серия паспорта:" @bind="_registrationModel.PasportS" style="display: block;  margin: 40px; border-radius: 30px">
            <b style="display: block;  margin: 40px">Номер паспорта:</b>
            <input placeholder="Номер паспорта:" @bind="_registrationModel.PasportN" style="display: block;  margin: 40px; border-radius: 30px">
            <b style="display: block;  margin: 40px">Номер полиса:</b>
            <input placeholder="Номер полиса:" @bind="_registrationModel" style="display: block;  margin: 40px; border-radius: 30px">
            <b style="display: block;  margin: 40px">День рождения</b>
            <InputDate Type="InputDateType.Date" @bind-Value="@_registrationModel.Birthday" style="display: block;  margin: 40px; border-radius: 30px"/>
            <b style="display: block;  margin: 40px">Дата окончания действия страхового полиса пациента</b>
            <InputDate Type="InputDateType.Date" @bind-Value="@_registrationModel.Dataexpirationinsurancepolisy" style="display: block;  margin: 40px; border-radius: 30px"/>
            <b style="display: block;  margin: 40px">Срок действия медецинского полиса</b>
            <InputDate Type="InputDateType.Date" @bind-Value="@_registrationModel.Policyvalidity" style="display: block;  margin: 40px; border-radius: 30px"/>
            <b style="display: block;  margin: 40px">Дата выдачи медицинской карты пациента</b>
            <InputDate Type="InputDateType.Date" @bind-Value="@_registrationModel.Dataissuemc" style="display: block;  margin: 40px; border-radius: 30px"/>
            <b style="display: block;  margin: 40px">Адрес:</b>
            <input placeholder="Адрес:" @bind="_registrationModel.Adres" style="display: block;  margin: 40px; border-radius: 30px">
            <b style="display: block;  margin: 40px">Телефон:</b>
            <input placeholder="Телефон:" @bind="_registrationModel" style="display: block;  margin: 40px; border-radius: 30px">
            <b style="display: block;  margin: 40px">email:</b>
            <input type="email" placeholder="E-mail:" @bind="_registrationModel.Email" style="display: block;  margin: 40px; border-radius: 30px">
            <b style="display: block;  margin: 40px">Пол:</b>
            <select class="select-element" @bind="@_registrationModel.Gender" style="display: block;  margin: 40px; border-radius: 30px">
                @foreach (var element in _genders)
                {
                    <option>@element.gendername</option>
                }
            </select>
            <b style="display: block;  margin: 40px">Место работы:</b>
            <select class="select-element" @bind="@_registrationModel.Placeofwork" style="display: block;  margin: 40px; border-radius: 30px">
                @foreach (var elem in _placeofworknames)
                {
                    <option>@elem.placeofworkname</option>
                }
            </select>
            <b style="display: block;  margin: 40px">Страховая компания:</b>
            <select class="select-element" @bind="@_registrationModel.Insurance" style="display: block;  margin: 40px; border-radius: 15px">
                @foreach (var elements in _insurancecompanynames)
                {
                    <option>@elements.insurancecompanyname</option>
                }
            </select>
            <button type="submit" @onclick="GetReg" style="display: block;  margin: 40px; border-radius: 15px">
                Зарегестрировать
            </button>
        </div>
    </div>
}

@code
{
    RegistrationModel _registrationModel = new();
    private string _urLpath = "http://localhost:5263/api/";
    private List<GenderList> _genders = new();
    private List<PlaceofworknameList> _placeofworknames = new();
    private List<InsurancecompanynameList> _insurancecompanynames = new();
    
    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage responseMessage = await ClientHttpClass.Client.GetAsync($"{_urLpath}Gender/GetGender");
        string elementGender = await responseMessage.Content.ReadAsStringAsync();
        _genders = JsonConvert.DeserializeObject<List<GenderList>>(elementGender)!.ToList();

        HttpResponseMessage resppons = await ClientHttpClass.Client.GetAsync($"{_urLpath}PlaceWork/GetPlaceWork");
        string elementPlaceWork = await resppons.Content.ReadAsStringAsync();
        _placeofworknames = JsonConvert.DeserializeObject<List<PlaceofworknameList>>(elementPlaceWork)!.ToList();
        
        HttpResponseMessage resp = await ClientHttpClass.Client.GetAsync($"{_urLpath}InsuranceCompany/GetInsuranceCompany");
        string elementInsurance = await resp.Content.ReadAsStringAsync();
        _insurancecompanynames = JsonConvert.DeserializeObject<List<InsurancecompanynameList>>(elementInsurance)!.ToList();
    }
    
    private async void GetReg()
    {
       /*var content = new FormUrlEncodedContent(values);*/
        /*HttpResponseMessage responseMessage = await ClientHttpClass.Client.PostAsync($"{_urLpath}Registration/PostReg", );*/
    }
    
    
    
    
    private class GenderList
    {
        public string? gendername { get; set; }
    }
    private class PlaceofworknameList
    {
        public string? placeofworkname { get; set; }
    }
    private class InsurancecompanynameList
    {
        public string? insurancecompanyname { get; set; }
    }
    
    
}
